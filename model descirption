

### **1. Apartment**

**1.1. Overview:**
- Represents an individual living space within a project (compound).  
- Each apartment is uniquely identified by an Apartment ID.

**1.2. Attributes:**
- **Space (Square Meters):** The total area of the apartment.
- **Features:** A collection of features (e.g., air conditioning, type of flooring).
- **Status:** Enum values - `Occupied`, `OpenForSale`, `OpenForResale`, `UnderConstruction`, `Planning`.
- **Location Factors:** A combination of view, neighborhood, proximity to amenities, etc.
- **Price Formula:** 
  - Base price = Σ (Feature Costs) + Σ (Invoice Amounts) + Location Adjustment Factor.
  - Price is dynamically adjusted based on the apartment’s space and location factors.

**1.3. Relationships:**
- **Customer:** 
  - Linked via Customer ID if sold.
  - A sold apartment maintains a history of linked invoices and payment status.
- **Tasks:** 
  - A list of tasks assigned to the apartment (e.g., installations, upgrades).
- **Invoices:** 
  - A detailed list of invoices linked to the apartment with due dates and payment statuses.

**1.4. Behavior:**
- **Price Calculation:** Adjusts based on features, space, location, and task completion.
- **Sales Process:** Upon sale, the apartment's status changes, and payment schedules are activated, reducing the total outstanding balance.

### **2. Feature**

**2.1. Overview:**
- Represents individual characteristics or enhancements within an apartment.

**2.2. Attributes:**
- **Feature Name:** The type of feature (e.g., kitchen type, flooring, air conditioning).
- **Cost:** The cost associated with the feature.
- **Impact on Value:** Multiplier or factor affecting overall apartment valuation.

**2.3. Relationships:**
- **Apartment:** 
  - Features are directly linked to specific apartments.
- **Tasks:** 
  - Tasks may be required to install or maintain features.

**2.4. Behavior:**
- **Cost Adjustment:** Dynamically affects the overall apartment price.

### **3. Task**

**3.1. Overview:**
- Represents specific work or activity within a project, crucial for construction, installation, or maintenance.

**3.2. Attributes:**
- **Task Name:** The description of the work to be performed.
- **Fixed Cost:** The predetermined cost for the task.
- **Required Manpower & Hours:** Resources needed for completion.
- **Task Status:** Enum values - `Pending`, `InProgress`, `Completed`.

**3.3. Relationships:**
- **Apartment:** 
  - Tasks are assigned to apartments for construction or maintenance.
- **Resource:** 
  - Links to required resources (e.g., manpower, materials).
- **Invoice:** 
  - Task costs are invoiced, linked to the respective apartment.

**3.4. Behavior:**
- **Cost Calculation:** Total cost = Fixed Cost + Resource Cost.
- **Progress Tracking:** Tracks task status and updates apartment readiness.

### **4. Resource**

**4.1. Overview:**
- Represents all necessary resources for executing tasks within the project.

**4.2. Attributes:**
- **Resource Type:** Enum values - `Manpower`, `Material`, `Equipment`.
- **Cost:** The cost associated with the resource.
- **Availability:** Availability status, tracking inventory for materials or scheduling for manpower.

**4.3. Relationships:**
- **Tasks:** 
  - Each task requires one or more resources.

**4.4. Behavior:**
- **Cost Management:** Monitors and adjusts resource allocation based on task requirements.

### **5. Invoice**

**5.1. Overview:**
- Represents billing details for tasks and features within an apartment.

**5.2. Attributes:**
- **Invoice ID:** Unique identifier.
- **Amount:** The total amount billed.
- **Due Date:** The deadline for payment.
- **Status:** Enum values - `Paid`, `Unpaid`, `Overdue`.
- **Associated Apartment:** Links to the specific apartment.
- **Customer ID:** Links to the customer who is billed.

**5.3. Relationships:**
- **Payments:** 
  - Linked payments reducing the total amount owed.
- **Tasks:** 
  - Tasks contributing to the invoice amount.
  
**5.4. Behavior:**
- **Payment Tracking:** Automatically reduces outstanding balance upon payment receipt.

### **6. Payment**

**6.1. Overview:**
- Represents a financial transaction towards settling an invoice.

**6.2. Attributes:**
- **Payment ID:** Unique identifier.
- **Amount:** The amount paid.
- **Date:** The date of the payment.
- **Method:** Enum values - `Bank Transfer`, `Credit Card`, `Cash`, etc.

**6.3. Relationships:**
- **Invoice:** 
  - Payments are linked to specific invoices.

**6.4. Behavior:**
- **Balance Adjustment:** Reduces the amount owed on an invoice.

### **7. Project**

**7.1. Overview:**
- Represents a large-scale construction project comprising multiple apartments.

**7.2. Attributes:**
- **Project ID:** Unique identifier.
- **Location:** Physical location details, influencing apartment values.
- **Amenities:** Details about common facilities (e.g., pool, gym).
- **Total Units:** Number of apartments within the project.

**7.3. Relationships:**
- **Apartments:** 
  - The collection of apartments within the project.
- **Tasks:** 
  - Overarching tasks that impact the entire project.
- **Resources:** 
  - Resource allocation for project-wide tasks.

**7.4. Behavior:**
- **Resource Management:** Allocates resources across apartments and tasks.
- **Progress Monitoring:** Tracks the overall status of construction and apartment readiness.

### **8. Customer**

**8.1. Overview:**
- Represents an individual or entity purchasing or owning apartments.

**8.2. Attributes:**
- **Customer ID:** Unique identifier.
- **Personal Information:** Name, contact details, etc.
- **Ownership Details:** Details about owned apartments, including their project location.

**8.3. Relationships:**
- **Apartments:** 
  - Linked to apartments purchased or owned.
- **Invoices:** 
  - Tracks all invoices linked to the customer.
  
**8.4. Behavior:**
- **Payment Tracking:** Monitors outstanding balances and payment histories.
- **Apartment Ownership:** Manages ownership transfers and associated invoicing.

---

This refined model should help guide the development of a robust domain model that aligns with your project’s needs.